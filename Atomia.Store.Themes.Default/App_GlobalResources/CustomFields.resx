<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aero_ens_id" xml:space="preserve">
    <value>ENS identifier</value>
  </data>
  <data name="aero_ens_password" xml:space="preserve">
    <value>ENS password</value>
  </data>
  <data name="coop_verification_code" xml:space="preserve">
    <value>Coop verification code</value>
  </data>
  <data name="country_of_birth" xml:space="preserve">
    <value>Birth country code (2-letter)</value>
  </data>
  <data name="country_of_birth.default.default.dmn-fr" xml:space="preserve">
    <value>Use ISO3166 two-letter country code</value>
  </data>
  <data name="country_of_birth.default.default.dmn-pm" xml:space="preserve">
    <value>Use ISO3166 two-letter country code</value>
  </data>
  <data name="country_of_birth.default.default.dmn-re" xml:space="preserve">
    <value>Use ISO3166 two-letter country code</value>
  </data>
  <data name="country_of_birth.default.default.dmn-tf" xml:space="preserve">
    <value>Use ISO3166 two-letter country code</value>
  </data>
  <data name="country_of_birth.default.default.dmn-wf" xml:space="preserve">
    <value>Use ISO3166 two-letter country code</value>
  </data>
  <data name="country_of_birth.default.default.dmn-yt" xml:space="preserve">
    <value>Use ISO3166 two-letter country code</value>
  </data>
  <data name="date_of_birth" xml:space="preserve">
    <value>Date of birth (YYYY-MM-DD)</value>
  </data>
  <data name="date_of_birth.default.default.dmn-fr" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="date_of_birth.default.default.dmn-hk" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="date_of_birth.default.default.dmn-pm" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="date_of_birth.default.default.dmn-re" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="date_of_birth.default.default.dmn-ru" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="date_of_birth.default.default.dmn-tf" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="date_of_birth.default.default.dmn-wf" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="date_of_birth.default.default.dmn-yt" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="eligibility_id" xml:space="preserve">
    <value>Eligibility document ID</value>
  </data>
  <data name="eligibility_id_type" xml:space="preserve">
    <value>Eligibility ID type</value>
  </data>
  <data name="eligibility_id_type.default.default.dmn-asnau" xml:space="preserve">
    <value>Values can be: ABN, ACT BN, NSW BN, NT BN, QLD BN, SA BN, TAS BN, VIC BN, WA BN, ACN or OTHER</value>
  </data>
  <data name="eligibility_id_type.default.default.dmn-comau" xml:space="preserve">
    <value>Values can be: ABN, ACN, TM or OTHER</value>
  </data>
  <data name="eligibility_id_type.default.default.dmn-netau" xml:space="preserve">
    <value>Values can be: ABN, ACN, TM or OTHER</value>
  </data>
  <data name="eligibility_id_type.default.default.dmn-orgau" xml:space="preserve">
    <value>Values can be: ABN, ACT BN, NSW BN, NT BN, QLD BN, SA BN, TAS BN, VIC BN, WA BN, ACN or OTHER</value>
  </data>
  <data name="eligibility_name" xml:space="preserve">
    <value>Name on eligibility doc.</value>
  </data>
  <data name="eligibility_type" xml:space="preserve">
    <value>Eligibility type</value>
  </data>
  <data name="eligibility_type.default.default.dmn-asnau" xml:space="preserve">
    <value>Values can be: Charity, Club, Incorporated Association, Non-profit Organization or Trade Union</value>
  </data>
  <data name="eligibility_type.default.default.dmn-comau" xml:space="preserve">
    <value>Values can be: Company, Partnership, Pending TM Owner, Registered Business or Trademark Owner</value>
  </data>
  <data name="eligibility_type.default.default.dmn-netau" xml:space="preserve">
    <value>Values can be: Company, Partnership, Pending TM Owner, Registered Business or Trademark Owner</value>
  </data>
  <data name="eligibility_type.default.default.dmn-orgau" xml:space="preserve">
    <value>Values can be: Charity, Club, Incorporated Association, Non-profit Organization or Trade Union</value>
  </data>
  <data name="entity_type" xml:space="preserve">
    <value>Legal entity type of registrant</value>
  </data>
  <data name="entity_type.default.default.dmn-it" xml:space="preserve">
    <value>Values can be: 1(individual), 2(company), 3(freelancers), 4(Non-profit org.), 5(Public org.), 6(other), 7(Non-italian that match 2-6)</value>
  </data>
  <data name="entity_type.default.default.dmn-it.1" xml:space="preserve">
    <value>Individual</value>
  </data>
  <data name="entity_type.default.default.dmn-it.2" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="entity_type.default.default.dmn-it.3" xml:space="preserve">
    <value>Freelancers</value>
  </data>
  <data name="entity_type.default.default.dmn-it.4" xml:space="preserve">
    <value>Non-profit organization</value>
  </data>
  <data name="entity_type.default.default.dmn-it.5" xml:space="preserve">
    <value>Public organization</value>
  </data>
  <data name="entity_type.default.default.dmn-it.6" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="entity_type.default.default.dmn-it.7" xml:space="preserve">
    <value>Non-italian that match 2-6</value>
  </data>
  <data name="id_card_authority" xml:space="preserve">
    <value>ID card issuer</value>
  </data>
  <data name="id_card_issue_date" xml:space="preserve">
    <value>ID card issue date</value>
  </data>
  <data name="id_card_issue_date.default.default.dmn-ru" xml:space="preserve">
    <value>Use date format: YYYY-MM-DD</value>
  </data>
  <data name="id_type" xml:space="preserve">
    <value>Contact ID type</value>
  </data>
  <data name="id_type.default.default.dmn-asia" xml:space="preserve">
    <value>Values can be: passport, certificate, legislation, societyRegistry or politicalPartyRegistry</value>
  </data>
  <data name="id_type.default.default.dmn-asia.certificate" xml:space="preserve">
    <value>Certificate</value>
  </data>
  <data name="id_type.default.default.dmn-asia.legislation" xml:space="preserve">
    <value>Legislation</value>
  </data>
  <data name="id_type.default.default.dmn-asia.passport" xml:space="preserve">
    <value>Passport</value>
  </data>
  <data name="id_type.default.default.dmn-asia.politicalPartyRegistry" xml:space="preserve">
    <value>Political Party Registry</value>
  </data>
  <data name="id_type.default.default.dmn-asia.societyRegistry" xml:space="preserve">
    <value>Society Registry</value>
  </data>
  <data name="jobs_association_member" xml:space="preserve">
    <value>Member of SHRM(Yes/No)</value>
  </data>
  <data name="jobs_association_member.default.default.dmn-jobs" xml:space="preserve">
    <value>Values can be: Yes or No</value>
  </data>
  <data name="jobs_website" xml:space="preserve">
    <value>Company website</value>
  </data>
  <data name="jobs_website.default.default.dmn-jobs" xml:space="preserve">
    <value>Website link not valid</value>
  </data>
  <data name="legal_entity_type" xml:space="preserve">
    <value>Legal entity type</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia" xml:space="preserve">
    <value>Values can be: naturalPerson, corporation, cooperative, partnership, government, politicalParty, society or institution</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.cooperative" xml:space="preserve">
    <value>Cooperative</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.corporation" xml:space="preserve">
    <value>Corporation</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.government" xml:space="preserve">
    <value>Government</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.institution" xml:space="preserve">
    <value>Institution</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.naturalPerson" xml:space="preserve">
    <value>Natural Person</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.partnership" xml:space="preserve">
    <value>Partnership</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.politicalParty" xml:space="preserve">
    <value>Political Party</value>
  </data>
  <data name="legal_entity_type.default.default.dmn-asia.society" xml:space="preserve">
    <value>Society</value>
  </data>
  <data name="nexus_app_purpose" xml:space="preserve">
    <value>Application purpose</value>
  </data>
  <data name="nexus_app_purpose.default.default.dmn-us" xml:space="preserve">
    <value>Application purpose can be P1, P2, P3, P4 or P5</value>
  </data>
  <data name="nexus_category" xml:space="preserve">
    <value>Nexus category</value>
  </data>
  <data name="nexus_category.default.default.dmn-us" xml:space="preserve">
    <value>Nexus category can be C11, C12, C21, C31 or C32</value>
  </data>
  <data name="place_of_birth" xml:space="preserve">
    <value>City of birth</value>
  </data>
  <data name="policy_reason" xml:space="preserve">
    <value>Reason for a domain</value>
  </data>
  <data name="policy_reason.default.default.dmn-asnau" xml:space="preserve">
    <value>Values can be: 1 (exact match) or 2 (closely connected). Default: 2</value>
  </data>
  <data name="policy_reason.default.default.dmn-asnau.1" xml:space="preserve">
    <value>Exact match</value>
  </data>
  <data name="policy_reason.default.default.dmn-asnau.2" xml:space="preserve">
    <value>Closely connected</value>
  </data>
  <data name="policy_reason.default.default.dmn-comau" xml:space="preserve">
    <value>Values can be: 1 (exact match) or 2 (closely connected). Default: 2</value>
  </data>
  <data name="policy_reason.default.default.dmn-comau.1" xml:space="preserve">
    <value>Exact match</value>
  </data>
  <data name="policy_reason.default.default.dmn-comau.2" xml:space="preserve">
    <value>Closely connected</value>
  </data>
  <data name="policy_reason.default.default.dmn-idau" xml:space="preserve">
    <value>Values can be: 1 (exact match) or 2 (closely connected). Default: 2</value>
  </data>
  <data name="policy_reason.default.default.dmn-idau.1" xml:space="preserve">
    <value>Exact match</value>
  </data>
  <data name="policy_reason.default.default.dmn-idau.2" xml:space="preserve">
    <value>Closely connected</value>
  </data>
  <data name="policy_reason.default.default.dmn-netau" xml:space="preserve">
    <value>Values can be: 1 (exact match) or 2 (closely connected). Default: 2</value>
  </data>
  <data name="policy_reason.default.default.dmn-netau.1" xml:space="preserve">
    <value>Exact match</value>
  </data>
  <data name="policy_reason.default.default.dmn-netau.2" xml:space="preserve">
    <value>Closely connected</value>
  </data>
  <data name="policy_reason.default.default.dmn-orgau" xml:space="preserve">
    <value>Values can be: 1 (exact match) or 2 (closely connected). Default: 2</value>
  </data>
  <data name="policy_reason.default.default.dmn-orgau.1" xml:space="preserve">
    <value>Exact match</value>
  </data>
  <data name="policy_reason.default.default.dmn-orgau.2" xml:space="preserve">
    <value>Closely connected</value>
  </data>
  <data name="postal_code_of_birth" xml:space="preserve">
    <value>Birth place postal code</value>
  </data>
  <data name="profession" xml:space="preserve">
    <value>Profession</value>
  </data>
  <data name="province_of_birth" xml:space="preserve">
    <value>Province of birth</value>
  </data>
  <data name="registrant_id_type" xml:space="preserve">
    <value>Registrant ID type</value>
  </data>
  <data name="registrant_id_type.default.default.dmn-asnau" xml:space="preserve">
    <value>Values can be: ACN or ABN</value>
  </data>
  <data name="registrant_id_type.default.default.dmn-comau" xml:space="preserve">
    <value>Values can be: ACN or ABN</value>
  </data>
  <data name="registrant_id_type.default.default.dmn-idau" xml:space="preserve">
    <value>Values can be: ACN or ABN</value>
  </data>
  <data name="registrant_id_type.default.default.dmn-netau" xml:space="preserve">
    <value>Values can be: ACN or ABN</value>
  </data>
  <data name="registrant_id_type.default.default.dmn-orgau" xml:space="preserve">
    <value>Values can be: ACN or ABN</value>
  </data>
</root>